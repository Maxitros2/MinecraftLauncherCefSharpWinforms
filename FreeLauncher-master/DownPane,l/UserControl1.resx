<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel8.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8wAAAABJRU5ErkJggg==
</value>
  </data>
</root>